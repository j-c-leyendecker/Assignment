#include <iostream>
#include <cmath>
using namespace std;
class Stack {
    int *arr;
    int top;
    int capacity;
public:
    Stack(int size) {
        capacity = size;
        arr = new int[capacity];
        top = -1;
    }
    void push(int x) {
        arr[++top] = x;
    }
    int pop() {
        return arr[top--];
    }
    bool isEmpty() {
        return top == -1;
    }
};
int evaluatePostfix(string exp) {
    Stack st(exp.length());
    for (int i = 0; i < exp.length(); i++) {
        char c = exp[i];
        if (isdigit(c)) {
            st.push(c - '0');
        }
        else {
            int val2 = st.pop();
            int val1 = st.pop();
            switch (c) {
                case '+': st.push(val1 + val2); break;
                case '-': st.push(val1 - val2); break;
                case '*': st.push(val1 * val2); break;
                case '/': st.push(val1 / val2); break;
                case '^': st.push(pow(val1, val2)); break;
            }
        }
    }
    return st.pop();
}
int main() {
    string postfix;
    cout << "Enter Postfix expression: ";
    cin >> postfix;
    cout << "Result: " << evaluatePostfix(postfix) << endl;
    return 0;
}
