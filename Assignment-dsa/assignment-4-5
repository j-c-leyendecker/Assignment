#include <iostream>
#include <queue>
using namespace std;
class Stack {
private:
    queue<int> q1, q2;

public:
    void push(int x) {
        while (!q1.empty()) {
            q2.push(q1.front());
            q1.pop();
        }
        q1.push(x);
        while (!q2.empty()) {
            q1.push(q2.front());
            q2.pop();
        }
        cout << x << " pushed to stack." << endl;
    }
    void pop() {
        if (q1.empty()) {
            cout << "Stack is empty! Cannot pop." << endl;
            return;
        }
        int x = q1.front();
        q1.pop();
        cout << x << " popped from stack." << endl;
    }

    int peek() {
        if (q1.empty()) {
            cout << "Stack is empty! No element to peek." << endl;
            return -1;
        }
        return q1.front();
    }
    bool isEmpty() {
        return q1.empty();
    }
};

int main() {
    Stack s;
    s.push(1);
    s.push(2);
    s.push(3);
    cout << "Top element: " << s.peek() << endl;
    s.pop();
    cout << "Top element after pop: " << s.peek() << endl;
    s.pop();
    s.pop();
    if (s.isEmpty()) {
        cout << "Stack is empty." << endl;
    }
    return 0;
}
