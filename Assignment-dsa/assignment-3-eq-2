#include <iostream>
#include <stack>
using namespace std;
class MinStack {
    stack<long long> st;
    long long minVal;
public:
    void push(int x) {
        if (st.empty()) {
            st.push(x);
            minVal = x;
        } else if (x >= minVal) {
            st.push(x);
        } else {
            st.push(2LL * x - minVal);
            minVal = x;
        }
    }
    void pop() {
        if (st.empty()) return;
        long long top = st.top();
        st.pop();
        if (top < minVal) {
            minVal = 2 * minVal - top;
        }
    }




    int top() {
        if (st.empty()) return -1;
        long long top = st.top();
        return (top >= minVal) ? top : minVal;
    }
    int getMin() {
        if (st.empty()) return -1;
        return minVal;
    }
};



int main() {
    MinStack s;
    s.push(5);
    s.push(2);
    s.push(10);
    cout << "Min: " << s.getMin() << endl; // 2
    s.pop();
    cout << "Top: " << s.top() << endl;    // 2
    cout << "Min: " << s.getMin() << endl; // 2
    s.pop();
    cout << "Min: " << s.getMin() << endl; // 5
}

